@page "/DataInput"

@inject HttpClient Http

@using Portfolio_01.Shared

<RadzenText TextStyle="TextStyle.H4" > 강남구 인구통계 입력 </RadzenText>

<RadzenDataGrid @ref="datagrid" Data="gangnamguPopulations" AllowPaging="true" PageSize="10" AllowSorting="true" EditMode="DataGridEditMode.Single"
                 TItem="GangnamguPopulation" RowCreate="@OnCreateRow" RowUpdate="@OnUpdateRow" >
    <Columns>
        <!-- ID -->
        <RadzenDataGridColumn TItem="GangnamguPopulation" Property="Id" Title="ID" Width="120px">
            <EditTemplate Context="data">
                <RadzenNumeric @bind-Value="data.Id" Style="width:100%" />
            </EditTemplate>
        </RadzenDataGridColumn>

        <!-- 행정구역 -->
        <RadzenDataGridColumn TItem="GangnamguPopulation" Property="AdministrativeAgency" Title="행정구역" Width="120px">
            <EditTemplate Context="data">
                <RadzenTextBox @bind-Value="data.AdministrativeAgency" Style="width:100%" />
            </EditTemplate>
        </RadzenDataGridColumn>

        <!-- 인구수(계) -->
        <RadzenDataGridColumn TItem="GangnamguPopulation" Property="TotalPopulation" Title="인구수(계)" Width="120px">
            <EditTemplate Context="data">
                <RadzenNumeric @bind-Value="data.TotalPopulation" Style="width:100%" />
            </EditTemplate>
        </RadzenDataGridColumn>

        <!-- 인구수(남) -->
        <RadzenDataGridColumn TItem="GangnamguPopulation" Property="MalePopulation" Title="인구수(남)" Width="120px">
            <EditTemplate Context="data">
                <RadzenNumeric @bind-Value="data.MalePopulation" Style="width:100%" />
            </EditTemplate>
        </RadzenDataGridColumn>

        <!-- 인구수(여) -->
        <RadzenDataGridColumn TItem="GangnamguPopulation" Property="FemalePopulation" Title="인구수(여)" Width="120px">
            <EditTemplate Context="data">
                <RadzenNumeric @bind-Value="data.FemalePopulation" Style="width:100%" />
            </EditTemplate>
        </RadzenDataGridColumn>

        <!-- 성비 -->
        <RadzenDataGridColumn TItem="GangnamguPopulation" Property="SexRatio" Title="성비" Width="120px">
            <EditTemplate Context="data">
                <RadzenNumeric @bind-Value="data.SexRatio" Style="width:100%" />
            </EditTemplate>
        </RadzenDataGridColumn>

        <!-- 세대수 -->
        <RadzenDataGridColumn TItem="GangnamguPopulation" Property="NumberOfHouseholds" Title="세대수" Width="120px">
            <EditTemplate Context="data">
                <RadzenNumeric @bind-Value="data.NumberOfHouseholds" Style="width:100%" />
            </EditTemplate>
        </RadzenDataGridColumn>

        <!-- 세대당인구수 -->
        <RadzenDataGridColumn TItem="GangnamguPopulation" Property="NumberOfPeoplePerHousehold" Title="세대당인구수" Width="120px">
            <EditTemplate Context="data">
                <RadzenNumeric @bind-Value="data.NumberOfPeoplePerHousehold" Style="width:100%" />
            </EditTemplate>
        </RadzenDataGridColumn>

        <!-- Button -->
        <RadzenDataGridColumn TItem="GangnamguPopulation" Filterable="false" Sortable="false" TextAlign="TextAlign.Right" Width="140px">
            <!-- Update, Delete Button -->
            <!-- 계속 보여줌 -->
            <Template Context="data">
                <RadzenButton Icon="edit" ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Size="ButtonSize.Medium" Click="@((args) => EditRow(data))"></RadzenButton>
                <RadzenButton Icon="delete" ButtonStyle="ButtonStyle.Danger" Variant="Variant.Flat" Size="ButtonSize.Medium" Click="@((args) => DeleteRow(data))"></RadzenButton>
            </Template>

            <!-- 데이터를 클릭 시 보여주게 됨 -->
            <!-- Data Save Button -->
            <EditTemplate Context="data">
                <RadzenButton Icon="check" ButtonStyle="ButtonStyle.Success" Variant="Variant.Flat" Size="ButtonSize.Medium" Click="@((args) => SaveRow(data))"></RadzenButton>
            </EditTemplate>
        </RadzenDataGridColumn>
    </Columns>
</RadzenDataGrid>
<!-- CRUD Button -->
<RadzenButton ButtonStyle="ButtonStyle.Success" Icon="add_circle_outline" Text="Add New Row" Click="@InsertRow" />

@code {
    private RadzenDataGrid<GangnamguPopulation>? datagrid;

    private IEnumerable<GangnamguPopulation>? gangnamguPopulations;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        gangnamguPopulations = await Http.GetFromJsonAsync<List<GangnamguPopulation>>("api/GangnamguPopulation");
    }

    // protected override async Task OnAfterRenderAsync(bool firstRender)
    // {
    //     this.gangnamguPopulations = await Http.GetFromJsonAsync<List<GangnamguPopulation>>("api/GangnamguPopulation");
    // }

    private async Task InsertRow()
    {
        var newData = new GangnamguPopulation();
        await datagrid.InsertRow(newData);
    }

    private async Task SaveRow(GangnamguPopulation data)
    {
        await datagrid.UpdateRow(data);    
    }

    private async Task OnCreateRow(GangnamguPopulation data)
    {
        var response = await Http.PostAsJsonAsync<GangnamguPopulation>("api/GangnamguPopulation", data);

        // if (response.IsSuccessStatusCode)
        // {
        //     await this.OnAfterRenderAsync(false);    
        // }
    }

    private async Task OnUpdateRow(GangnamguPopulation data)
    {
        var response = await Http.PutAsJsonAsync<GangnamguPopulation>("api/GangnamguPopulation", data);

        // if (response.IsSuccessStatusCode)
        // {
        //     await this.OnAfterRenderAsync(false);
        // }
    }

    private async Task EditRow(GangnamguPopulation data)
    {
        await datagrid.EditRow(data);
    }

    private async Task DeleteRow(GangnamguPopulation data)
    {
        var targetId = data.Id;
        var response = await Http.DeleteAsync("api/GangnamguPopulation/" + targetId);

        if (response.IsSuccessStatusCode)
        {
            await this.OnAfterRenderAsync(false);
        }
    }
}
